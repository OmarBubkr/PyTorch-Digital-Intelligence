# -*- coding: utf-8 -*-
"""SPP Layer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18Ukwq78pkHeeLsoI96VELTBnBDZWgHYq
"""

import torch.nn as nn
import torch.nn.functional as f
import torch
import math

class SPP2d(nn.Module):
  def __init__(self, l_pyramid: list):
    super().__init__()
    self.l_pyramid = l_pyramid

  def forward(self, x):
    B, _, H, W= x.shape

    for i, level in enumerate(self.l_pyramid):
      win_h = math.ceil(H / level)
      win_w = math.ceil(W / level)

      # (+1) for full coverage
      overshoot_h = (win_h*level - H + 1)/2
      overshoot_w = (win_w*level - W + 1)/2
      out_0 = f.max_pool2d(x, (win_h, win_w), (win_h, win_w), (int(overshoot_h), int(overshoot_w)))

      if i == 0:
        out = out.view(B, -1)

      else:
        out = torch.cat([out, out_0.view(B, -1)], dim=1)

    return out

